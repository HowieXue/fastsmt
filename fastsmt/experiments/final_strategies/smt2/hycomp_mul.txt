(if (> num-consts 8) (if (> size 59) (if (> num-consts 16) (if (> num-exprs 2314) (if (> size 231) (if (> num-consts 57) (if (> num-consts 73) (if (> num-exprs 3012) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)))) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))))) (then (using-params simplify :hoist_mul true :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) propagate-values solve-eqs smt)) (then (using-params simplify :hoist_mul true :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) propagate-values solve-eqs smt)) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))))) (if (> num-consts 31) (if (> num-exprs 1808) (if (> num-consts 57) (if (> size 278) (if (> num-consts 73) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)))) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))))) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))))) (then (using-params simplify :hoist_mul true :blast_distinct true :flat false :som false :hi_div0 true :elim_and false :local_ctx false) propagate-values (using-params qfnra-nlsat :inline_vars true :seed 795 :factor true))) (if (> size 278) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)))) (if (> size 176) (if (> num-exprs 1448) (if (> num-consts 48) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)))) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))))) (if (> num-consts 48) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)))) (if (> num-exprs 808) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)))) (then (using-params simplify :hoist_mul true :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) propagate-values solve-eqs smt)))) (if (> num-exprs 1153) (then (using-params simplify :hoist_mul false :blast_distinct false :flat true :som false :hi_div0 true :elim_and true :local_ctx true) propagate-values elim-uncnstr solve-eqs propagate-values (using-params qfnra-nlsat :inline_vars false :seed 314 :factor true)) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)))))))) (if (> size 102) (if (> num-exprs 481) (if (> size 176) (then (using-params simplify :hoist_mul false :blast_distinct false :flat false :som true :hi_div0 true :elim_and true :local_ctx true) solve-eqs elim-uncnstr (using-params simplify :hoist_mul true :blast_distinct false :flat false :som true :hi_div0 false :elim_and true :local_ctx false) ctx-simplify (using-params qfnra-nlsat :inline_vars false :seed 841 :factor false)) (if (> num-exprs 1153) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)))) (if (> num-consts 26) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)))) (if (> size 115) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)))) (then (using-params simplify :hoist_mul false :blast_distinct false :flat true :som false :hi_div0 true :elim_and true :local_ctx true) propagate-values elim-uncnstr solve-eqs propagate-values (using-params qfnra-nlsat :inline_vars false :seed 314 :factor true)))))) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))))) (if (> num-exprs 978) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)))) (then (using-params simplify :hoist_mul true :blast_distinct false :flat true :som true :hi_div0 true :elim_and true :local_ctx false) solve-eqs (using-params qfnra-nlsat :inline_vars false :seed 271 :factor false)))))) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))))) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))))) (if (> num-exprs 289) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)))) (then (using-params simplify :hoist_mul false :blast_distinct true :flat true :som false :hi_div0 true :elim_and false :local_ctx false) (if (> num-consts 8) (if (> size 47) (if (> num-exprs 668) (if (> num-exprs 1153) (if (> size 102) (if (> size 150) (if (> num-consts 48) (if (> size 278) (if (> num-exprs 2114) (if (> num-consts 73) (if (> num-exprs 2314) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true)) (if (> num-exprs 1448) (if (> num-exprs 3012) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2314) (then solve-eqs elim-uncnstr smt) (if (> num-exprs 2114) (then solve-eqs elim-uncnstr smt) (if (> num-consts 73) (then solve-eqs elim-uncnstr smt) (if (> size 176) (if (> size 231) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true) (if (> num-exprs 1808) (then solve-eqs elim-uncnstr smt) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)))))) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))) (if (> num-consts 41) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (then solve-eqs elim-uncnstr smt))) (then solve-eqs elim-uncnstr smt)) (then solve-eqs elim-uncnstr smt)) (if (> size 131) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (if (> num-consts 21) (if (> num-exprs 978) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)))) (using-params qfnra-nlsat :inline_vars false :seed 895 :factor true)) (then solve-eqs elim-uncnstr smt)) (if (> num-consts 0) (then solve-eqs elim-uncnstr smt) (using-params qfnra-nlsat :inline_vars true :seed 1000 :factor true))))))